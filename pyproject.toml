[tool.poetry]
name = "watchfs"
version = "0.1.0"
description = ""
authors = ["Nyakku Shigure <sigure.qaq@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/ShigureLab/watchfs"
repository = "https://github.com/ShigureLab/watchfs"
keywords = []
classifiers = [
  "Operating System :: OS Independent",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
]

[tool.poetry.dependencies]
python = "^3.12"
watchfiles = "^0.21.0"
typing-extensions = "^4.8.0"
aiofiles = "^23.2.1"
colored = "^2.2.3"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pyright = "^1.1.333"
pytest-rerunfailures = "^12.0"
ruff = "^0.2.0"

[tool.poetry.scripts]
watchfs = "watchfs.__main__:main"

[tool.pyright]
include = ["watchfs", "tests"]
pythonVersion = "3.12"
typeCheckingMode = "strict"

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
select = [
  # Pyflakes
  "F",
  # Pycodestyle
  "E",
  "W",
  # Isort
  "I",
  # Pyupgrade
  "UP",
  # Flake8-pyi
  "PYI",
  # Flake8-use-pathlib
  "PTH",
  # Yesqa
  "RUF100",
]
ignore = [
  "E501", # line too long, duplicate with black
  "F401", # imported but unused, duplicate with pyright
  "F841", # local variable is assigned to but never used, duplicate with pyright
]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]
known-first-party = ["watchfs"]

[tool.ruff.lint.per-file-ignores]
"setup.py" = ["I"]

[build-system]
requires = ["poetry-core>=1.3.0"]
build-backend = "poetry.core.masonry.api"
